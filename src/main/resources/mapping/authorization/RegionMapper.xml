<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vedeng.authorization.dao.RegionMapper" >
  <resultMap id="BaseResultMap" type="com.vedeng.authorization.model.Region" >
    <id column="REGION_ID" property="regionId" jdbcType="INTEGER" />
    <result column="PARENT_ID" property="parentId" jdbcType="INTEGER" />
    <result column="REGION_NAME" property="regionName" jdbcType="VARCHAR" />
    <result column="REGION_TYPE" property="regionType" jdbcType="INTEGER" />
    <result column="AGENCY_ID" property="agencyId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    REGION_ID, PARENT_ID, REGION_NAME, REGION_TYPE, AGENCY_ID
  </sql>
  
  <!-- getRegionByParentId start -->
  <select id="getRegionByParentId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
	  select
	  	<include refid="Base_Column_List" />
	  from T_REGION
	  where PARENT_ID=#{parentId,jdbcType=INTEGER}
	  order by REGION_ID
  </select>
  
  <!-- getRegionById -->
  <select id="getRegionById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  select
  <include refid="Base_Column_List" />
  from T_REGION
  where REGION_ID=#{regionId,jdbcType=INTEGER}
  </select>
  
  <select id="getRegion" resultMap="BaseResultMap" parameterType="com.vedeng.authorization.model.Region">
  	select
  <include refid="Base_Column_List" />
  from T_REGION
  where 
  	REGION_NAME = #{regionName,jdbcType=VARCHAR}
  	and
  	PARENT_ID = #{parentId,jdbcType=INTEGER}
  </select>
  
  <select id="getRegionListPage" resultMap="BaseResultMap" parameterType="Map">
	  select
	  <include refid="Base_Column_List" />
	  from T_REGION
	  where PARENT_ID = 1
	  <if test="region.regionName != null and region.regionName != ''">
	  	and REGION_NAME like CONCAT('%',#{region.regionName},'%' )
	  </if>
	  order by REGION_ID
  </select>
  
  <insert id="insert" parameterType="com.vedeng.authorization.model.Region" useGeneratedKeys="true" keyProperty="regionId">
		insert into T_REGION
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="regionId != null">
				REGION_ID,
			</if>
			<if test="parentId != null">
				PARENT_ID,
			</if>
			<if test="regionName != null">
				REGION_NAME,
			</if>
			<if test="regionType != null">
				REGION_TYPE,
			</if>
			<if test="agencyId != null">
				AGENCY_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="regionId != null">
				#{regionId,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
			<if test="regionName != null">
				#{regionName,jdbcType=INTEGER},
			</if>
			<if test="regionType != null">
				#{regionType,jdbcType=INTEGER},
			</if>
			<if test="agencyId != null">
				#{agencyId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<!-- 修改 -->
	<update id="update" parameterType="com.vedeng.authorization.model.Region">
		update T_REGION
		<set>
			<if test="parentId != null">
				PARENT_ID = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="regionName != null">
				REGION_NAME = #{regionName,jdbcType=INTEGER},
			</if>
			<if test="regionType != null">
				REGION_TYPE = #{regionType,jdbcType=INTEGER},
			</if>
			<if test="agencyId != null">
				AGENCY_ID = #{agencyId,jdbcType=INTEGER},
			</if>
		</set>
		where REGION_ID = #{regionId,jdbcType=INTEGER}
	</update>
	
	<select id="getRegionByParam" resultMap="BaseResultMap" parameterType="com.vedeng.authorization.model.Region">
	  select
	  	<include refid="Base_Column_List" />
	  from T_REGION
	  where PARENT_ID=#{parentId,jdbcType=INTEGER}
	  		and REGION_TYPE = #{regionType,jdbcType=INTEGER}
	  		and REGION_NAME like CONCAT('%',#{regionName},'%' )
  	</select>
  	
  	<select id="getRegionByArea" parameterType="com.vedeng.authorization.model.vo.RegionVo" resultType="com.vedeng.authorization.model.vo.RegionVo">
  		SELECT
			a.REGION_ID AS province,
			a.REGION_NAME AS provinceName
			<if test="null != cityName and cityName != '' ">
				,b.REGION_ID AS city,
				b.REGION_NAME AS cityName
				<if test="null != zone and zone != '' ">
					,c.REGION_ID AS zoneId,
					c.REGION_NAME AS zone
				</if>
			</if>
		FROM
			T_REGION a
			<if test="null != cityName and cityName != '' ">
				LEFT JOIN T_REGION b ON a.REGION_ID = b.PARENT_ID
				<if test="null != zone and zone != '' ">
					LEFT JOIN T_REGION c ON b.REGION_ID = c.PARENT_ID
				</if>
			</if>
		WHERE
			a.REGION_NAME = #{provinceName,jdbcType=VARCHAR}
			<if test="null != cityName and cityName != '' ">
				AND b.REGION_NAME = #{cityName,jdbcType=VARCHAR}
			</if>
			<if test="null != zone and zone != '' ">
				AND c.REGION_NAME = #{zone,jdbcType=VARCHAR}
			</if>
			limit 1
  	</select>
  	
  	<select id="getRegionIdStringByMinRegionId" parameterType="java.lang.Integer" resultType="java.lang.String">
  		SELECT
			CONCAT(IFNULL(c.REGION_ID, ""), ",", IFNULL(b.REGION_ID, ""), ",", IFNULL(a.REGION_ID, "")) as REGION_ID_STR
  		FROM T_REGION a
  		LEFT JOIN T_REGION b
  			ON b.REGION_ID = a.PARENT_ID
  		LEFT JOIN T_REGION c
  			ON c.REGION_ID = b.PARENT_ID
  		WHERE
  			a.REGION_ID = #{minRegionId,jdbcType=INTEGER}
  		LIMIT 1
  	</select>

	<select id="getCityList" parameterType="com.vedeng.authorization.model.vo.RegionVo" resultType="com.vedeng.authorization.model.vo.RegionVo">
		 SELECT
		  b.REGION_ID,
		  b.PARENT_ID,
		  b.REGION_NAME,
		  b.REGION_TYPE,
		  b.AGENCY_ID
		FROM
		  T_REGION a
		  LEFT JOIN T_REGION b
			ON  b.PARENT_ID = a.REGION_ID
		WHERE b.PARENT_ID
		<if test="cityStart == 2 ">
			BETWEEN #{cityStart,jdbcType=INTEGER} AND #{cityEnd,jdbcType=INTEGER}
		</if>
		<if test="cityStart == 0">
		    NOT	BETWEEN  #{cityStart,jdbcType=INTEGER} AND #{cityEnd,jdbcType=INTEGER}
		</if>
  	</select>
</mapper>